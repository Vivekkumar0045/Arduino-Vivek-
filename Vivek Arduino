   Medicine Vending Machine



While making the Medicine Vending Machine(MVM) you should divide your team into 2 Parts. One part of the team will be working on Hardware and another should be working on Software.


Now for the Software you have to develop two types of software:


For MVM itself which will communicate with the hardware and dispense the medicine accordingly
For Doctors, this software will generate prescriptions with a QR Code(this QR code will hold information that is in the prescription)

Hardware Part:


This will have all the components that are required for the MVM. Like when we developed the MVM for SIH 2018 we used hardware components such as(you can use others too according to your need and modification ):


Arduino Mega 2560
DC Gear Motor(12v, 30RPM)
L293D Motor Driver
IR sensor
HC-05 Bluetooth Module
LM7805(Voltage Regulator) with Heat Sink
12 V power supply
Spiral Spring
Wheel (For fitting Spiral and Motor)


WORKING:


 Basically, a prescription is generated by a doctor that you will generate from your software which will have a QR code having all the information in it. That prescription will be scanned on the MVM software, and it will read all the data perform different checks, and send binary or whatever method you are using to the Bluetooth module. And here the spiral will rotate according to the command received and hence dispense the medicine.


Note: Let your machine dispense 4 types of medicine:

Say A, B, C, and D. So let in a prescription there it is A medicine is to be dispensed 2 times, B, C, and D 1 time respectively.

So your MVM software where you scanned your prescription will send 00, 00, 01, 10, and 11 to the Bluetooth module which is read by Arduino.

00- means A medicine,

01- means B medicine,

10- means C medicine,

11- means D medicine


In the above scenario, 00 is sent 2 times so the spiral will rotate such that 2 leaves of medicine ‘A’ will be dispensed. Similarly, 01, 10, and 11 are sent 1 time each so the spiral will rotate single times each, and B, C, and D each of 1 leaf will be dispensed


Note: The below diagram is just descriptive not the exact diagram

         





DEMO CODE FOR ARDUINO(You will have to modify it):


An Arduino sketch for controlling multiple motors using IR sensors and a Bluetooth module. The code is designed to rotate each motor (m1a, m2a, m3a, m4a, m5a) for a certain number of rotations based on input received via Bluetooth. Each motor is associated with a specific letter ('a' through 'e').


Here's a summary of what this code does:


1. It initializes various variables, including pins for motors and IR sensors.


2. In the `loop()` function:

   - It checks if there is data available on the Serial communication (Bluetooth input).

   - If a specific letter ('a' through 'e') is received, it enters a loop to control a particular motor.

   - Within the motor control loop, it reads the state of the corresponding IR sensor.

   - If the IR sensor detects an object (a == 1), it increments the `b` variable.

   - When `b` reaches 1, indicating the desired number of rotations, it stops the motor and breaks out of the loop.


While this code provides a basic framework for controlling motors using Bluetooth input and IR sensors, there are a few things to consider:


1. Motor Control: Make sure the hardware connections for your motors, motor driver, and power supply are set up correctly.


2. Safety: Depending on your application, you may need additional safety features, such as emergency stop mechanisms and obstacle detection to prevent accidents.


3. Bluetooth Communication: Ensure that your Bluetooth module is properly paired with your control device (e.g., smartphone) and that the communication protocol is implemented correctly.


4. Debugging: Debugging may be necessary to address any issues that arise during testing and operation.


5. User Interface: Consider adding a user-friendly interface if this vending machine is intended for public use.


6. Documentation: Comment your code thoroughly and provide documentation for how to use and maintain the system.


Remember to adjust the code and circuit connections to match your specific hardware and project requirements. Additionally, ensure that safety considerations are a top priority, especially when dealing with machines that dispense items like medicines.




int m1a=15;

int m2a=12;

int m3a=11;

int m4a=10;

int m5a=9;

int irsensor1=14;

int irsensor2=6;

int irsensor3=5;

int irsensor4=4;

int irsensor5=3;

char value;

int a=0,b=0;

void setup()

{

  Serial.begin(9600);

  pinMode(m1a, OUTPUT); // Motor

  pinMode(m2a, OUTPUT); // Motor  

  pinMode(m3a, OUTPUT); // Motor

  pinMode(m4a, OUTPUT); // Motor

  pinMode(m5a, OUTPUT); // Motor

  pinMode(irsensor1,INPUT); // IR sensor

  pinMode(irsensor2,INPUT); // IR sensor

  pinMode(irsensor3,INPUT); // IR sensor

  pinMode(irsensor4,INPUT); // IR sensor

  pinMode(irsensor5,INPUT); // IR sensor

  // put your setup code here, to run once:


}


void loop() {


 if(Serial.available()>0) // if data is available at UART then only it will enter into block

 {

  value=Serial.read(); // reading the data coming at UART

  Serial.println(value); // printing on serial monitor

 

  if(value=='a') // for motor 1

  {

    while(1)

    {

     a = digitalRead(irsensor1); // Reading the sensor pin

     Serial.println("In loop value =1");

     Serial.println("value of a=");

     Serial.println(a);

   

     

      Serial.println("start");

      digitalWrite(m1a, HIGH);  // Motor start

     

   

      if(a==1)

       {

        Serial.println("stop");

        b++;

        delay(100);

        a=0;

        }

      if(b==1)  // number of rotation of motor

       {

         digitalWrite(m1a, LOW); // motor stop

         b=0;

         break;

        }

      }

    }

   

  if(value=='b') // for motor 2

  {

    while(1)

    {

     a= digitalRead(irsensor2); // Reading the sensor pin

     Serial.println("In loop value =2");

     Serial.println("value of a=");

     Serial.println(a);

     Serial.println("start");

     digitalWrite(m2a, HIGH);  // Motor start

     if( a== 1)

       {

        b++;

        delay(100);

        a=0;

        }

      if(b==1)  // number of rotation of motor

       { Serial.println("stop");

         digitalWrite(m2a, LOW); // motor stop

         b=0;

         break;

        }

      }

    }

   

  if(value=='c') // for motor 3

  {

    while(1)

    {

     a= digitalRead(irsensor3); // Reading the sensor pin

     Serial.println("In loop value =3");

     Serial.println("value of a=");

     Serial.println(a);

     Serial.println("start");

   

     digitalWrite(m3a, HIGH);  // Motor start

     if( a== 1)

       {

        b++;

        delay(100);

        a=0;

        }

      if(b==1)  // number of rotation of motor

       { Serial.println("stop");

         digitalWrite(m3a, LOW); // motor stop

         b=0;

         break;

        }

      }

    }

   

  if(value=='d') // for motor 4

  {

    while(1)

    {

     a= digitalRead(irsensor4); // Reading the sensor pin

     Serial.println("In loop value =4");

     Serial.println("value of a=");

     Serial.println(a);

     Serial.println("start");

     digitalWrite(m4a, HIGH);  // Motor start

     if( a== 1)

       {

        b++;

        delay(100);

       

        a=0;

        }

      if(b==1)  // number of rotation of motor

       { Serial.println("stop");

         digitalWrite(m4a, LOW); // motor stop

         b=0;

         break;

        }

      }

    }

   

  if(value=='e') // for motor 5

  {

    while(1)

    {

     a= digitalRead(irsensor5); // Reading the sensor pin

     Serial.println("In loop value =5");

     Serial.println("value of a=");

     Serial.println(a);

     Serial.println("start");

     digitalWrite(m5a, HIGH);  // Motor start

     if( a== 1)

       {

        b++;

        delay(100);

        a=0;

        }

      if(b==1)  // number of rotation of motor

       { Serial.println("stop");

         digitalWrite(m5a, LOW); // motor stop

         b=0;

         break;

        }

      }

    }

  }

  // put your main code here, to run repeatedly:

}


